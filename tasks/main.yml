---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Checking for install in {{ summon_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ summon_install_dir }}'
  changed_when: false
  register: summon_binary
- name: Downloading and installing summon
  when: not summon_binary.stat.exists
  block:
    - name: Downloading {{ summon_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ summon_url }}'
        dest: '{{ summon_tmp_archive }}'
        checksum: '{{ summon_checksum }}'
        mode: '644'
    - name: Mkdir {{ summon_install_dir }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ summon_install_dir }}'
        state: directory
        mode: '755'
    - name: Unarchiving {{ summon_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ summon_tmp_archive }}'
        dest: '{{ summon_install_dir }}'
        creates: '{{ summon_install_dir }}/summon'
  always:
    - name: Rm {{ summon_tmp_archive }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ summon_tmp_archive }}'
        state: absent
- name: Linking {{ summon_link }} to {{ summon_exe }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ summon_exe }}'
    dest: '{{ summon_link }}'
    state: link
